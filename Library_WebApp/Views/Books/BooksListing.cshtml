@{
    ViewData["Title"] = "Books Listing";
}

<div class="mt-3">
    <h6>
        <a asp-area="" asp-action="Dashboard" asp-controller="Home" data-bs-toggle="tooltip" data-bs-title="Back to Dashboard"><i class="fa-solid fa-circle-arrow-left"></i></a>
        <span class="ms-3">Manage Books</span>
    </h6>

    <input type="hidden" id="aesKey" value="@ViewBag.AES_Key" />
    <input type="hidden" id="aesIV" value="@ViewBag.AES_IV" />

    <div class="table-responsive">
        <table id="UsersGrid" class="table table-sm table-stripped table-hover table-bordered nowrap w-100">
            <thead>
                <tr>
                    <th>BookId</th>
                    <th>Actions</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Books Count</th>
                    <th>Created At</th>
                    <th>Created By</th>
                    <th>Updated At</th>
                    <th>Updated By</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            $.fn.dataTable.ext.errMode = "none";

            $("#UsersGrid")
                .on('error.dt', function (e, settings, techNote, message) {
                    console.log('An error has been reported by DataTables: ', message);
                    console.log(techNote);
                })
                .dataTable({
                    "stateSave": true,
                    "scrollX": true,
                    "scrollY": "60vh",
                    "scrollCollapse": true,
                    "fixedColumns": {
                        "start": 1
                    },
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "pagingType": "full",
                    "ajax": {
                        "url": "/Books/LoadData",
                        "type": "POST",
                        "datatype": "json",
                        "error": function (xhr) {
                            let err = "<div class='alert alert-danger' role='alert'>" +
                                "<strong>Error code " + xhr.status + "...</strong><br>" +
                                xhr.responseText.substr(0, xhr.responseText.lastIndexOf(' ', 999)) + '...' +
                                "</div>";
                            displayModal("Failure!", err);

                            $('#UsersGrid_processing').hide();
                            $($(".dt-empty")).closest("tr").hide()
                        }
                    },
                    "columnDefs": [{
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }],
                    "columns": [
                        { "data": "id", "name": "Id", "autoWidth": true },
                        {
                            "render": function (data, type, row) {
                                return "<button class='btn btn-sm btn-primary mx-2' onclick='EditBook(" + row.id + ")'><i class='fa-solid fa-pencil'></i></button>" +
                                    "<button class='btn btn-sm btn-danger mx-2' onclick='DeleteBook(" + row.id + ")'><i class='fa-solid fa-trash-can'></i></button>";
                            }
                        },
                        { "data": "title", "name": "Title", "autoWidth": true },
                        { "data": "description", "name": "Description", "autoWidth": true },
                        { "data": "books_count", "name": "Books Count", "autoWidth": true },
                        { "data": "created_at", "name": "Created At", "autoWidth": true },
                        { "data": "created_by", "name": "Created By", "autoWidth": true },
                        { "data": "updated_at", "name": "Updated At", "autoWidth": true },
                        { "data": "updated_by", "name": "Created By", "autoWidth": true },
                    ],
                    "layout": {
                        "topStart": {
                            "buttons": [
                                {
                                    "extend": 'pageLength',
                                    "className": "btn btn-sm btn-light border btnCustomDtHeader"
                                },
                                {
                                    "text": '<i class="fa-solid fa-plus me-2"></i>New Book',
                                    "action": function () {
                                        loader(true);
                                        RedirectOn("/Books/ManageBook");
                                    },
                                    "className": "btn btn-sm btn-info btnCustomDtHeader"
                                }
                            ]
                        }
                    },
                    "drawCallback": function (settings) {
                        var response = settings.json;
                        if (response.status !== 200 && response.hasOwnProperty("error")) {
                            let err = "<div class='alert alert-danger' role='alert'>" + response.error + "</div>";
                            displayModal("Failure!", err);
                        }
                    },
                    "initComplete": function (settings, json) {
                        $(".btnCustomDtHeader").removeClass("dt-button");
                    },
                });
        });

        function DeleteBook(id) {
            loader(true);
            if (id) {
                if (confirm("Do you want to delete this book?")) {
                    $.ajax({
                        url: "/Books/DeleteBook?bookId=" + id,
                        type: "DELETE",
                        success: function (data) {
                            if (data.status !== 200) {
                                let errorBody = "<div class='alert alert-danger' role='alert'>" +
                                    `<strong>Error Occured... Status ${data.status}</strong><br>` +
                                    `${data.error}</div>`;
                                displayModal("Failure!", errorBody, "window.location.reload()");
                            }
                            else {
                                let messageBody = "<div class='alert alert-success' role='alert'>" +
                                    `<strong>Request Successful... Status ${data.status}</strong><br>` +
                                    `${data.data}</div>`;
                                displayModal("Success!", messageBody, "window.location.reload()");
                            }
                            loader(false);
                        },
                        error: function (xhr, error) {
                            displayModal("Failure!", `Error code ${xhr.status}... ${error}`, "window.location.reload();");
                            loader(false);
                        }
                    });
                }
                else {
                    loader(false);
                }
            }
            else {
                displayModal("Failure!", "Incorrect book ID found!", "window.location.reload()");
                loader(false);
            }
        }

        function EditBook(id) {
            loader(true);
            if (id) {
                let text = CryptoJS.enc.Utf8.parse(id);

                let Key = $("#aesKey").val();
                let IV = $("#aesIV").val();
                console.log(Key);
                console.log(IV);

                Key = CryptoJS.enc.Utf8.parse(Key);
                IV = CryptoJS.enc.Utf8.parse(IV);

                let encryptedText = CryptoJS.AES.encrypt(text, Key, { keySize: 128 / 8, iv: IV, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
                RedirectOn("/Books/ManageBook?bookId=" + encryptedText);
            }
            else {
                displayModal("Failure!", "Incorrect book ID found!", "window.location.reload()");
                loader(false);
            }
        }
    </script>
}