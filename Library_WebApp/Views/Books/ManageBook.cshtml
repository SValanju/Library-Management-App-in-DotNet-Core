@model Library_WebApp.Models.Books.BooksManagement

@{
    ViewData["Title"] = "Manage Book";
}

<div class="mt-3">
    <h6>
        <a asp-area="" asp-action="Books" asp-controller="BooksListing" data-bs-toggle="tooltip" data-bs-title="Back to Listing"><i class="fa-solid fa-circle-arrow-left"></i></a>
        <span class="ms-3">Manage Book</span>
    </h6>

    <div class="my-5">
        <form method="post" aspp-asp-antiforgery="true" data-ajax="true" data-ajax-method="post" data-ajax-loading="#loader" data-ajax-success="onBookSuccess" data-ajax-failure="onBookFailure" data-ajax-url="/Books/ManageBook">

            @Html.HiddenFor(m => m.id)
            @Html.HiddenFor(m => m.errorMessage)
            @Html.HiddenFor(m => m.btnSubmitLabel)

            <div class="row">
                <div class="mb-2 col-md-3">
                    <label asp-for="title" class="form-label"></label>
                    <input asp-for="title" class="form-control form-control-sm" />
                    <span asp-validation-for="title" class="text-danger errMessage"></span>
                </div>
                <div class="mb-2 col-md-4">
                    <label asp-for="description" class="form-label"></label>
                    <textarea asp-for="description" class="form-control form-control-sm"></textarea>
                </div>
            </div>
            <div class="row">
                <div class="mb-2 col-md-3">
                    <label asp-for="isActive" class="form-label"></label>
                    <div class="form-check form-switch">
                        <input type="checkbox" asp-for="isActive" onchange="isActiveChange(this)" class="form-check-input" role="switch" id="isActive" />
                        <label class="form-check-label text-muted" for="isActive" id="isActiveLabel">Book available</label>
                    </div>
                </div>
                <div class="mb-2 col-md-3">
                    <label asp-for="books_count" class="form-label"></label>
                    <input type="number" asp-for="books_count" class="form-control form-control-sm" min="1" />
                    <span asp-validation-for="books_count" class="text-danger errMessage"></span>
                </div>
                <div class="col-md-12">
                    <button type="button" class="btn btn-sm btn-light border" onclick="RedirectOn('/Books/BooksListing')"><i class="fa-solid fa-circle-xmark me-2"></i>Cancel</button>
                    <button type="submit" class="btn btn-sm btn-primary"><i class="fa-solid fa-floppy-disk me-2"></i>@Model.btnSubmitLabel</button>
                </div>
            </div>
        </form>
    </div>

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" render-mode="ServerPrerendered" />
    <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>

    <script>
        $(function () {
            if ($("#errorMessage").val() !== "") {
                displayModal("Error!", $("#errorMessage").val(), 'RedirectOn("/Books/BooksListing")');
            }
        });

        function isActiveChange(checkbox) {
            if ($(checkbox).prop("checked")) {
                $("#isActiveLabel").text("Book available for transfer.");
            }
            else {
                $("#isActiveLabel").text("Book not available for transfer.");
            }
        }

        function onBookSuccess(data) {
            if (data.status !== 200) {
                if (data.hasOwnProperty("errorList")) {
                    let errorBody = "<div class='alert alert-danger' role='alert'>" +
                        `<strong>Error Occured... Status ${data.status}</strong><br>`;
                    errorBody += "<ul>";
                    data.errorList.forEach(function (item) {
                        errorBody += `<li>${item}</li>`;
                    });
                    errorBody += "</ul></div>";
                    displayModal("Failure!", errorBody);
                }
                else if (data.hasOwnProperty("error")) {
                    let errorBody = "<div class='alert alert-danger' role='alert'>" +
                        `<strong>Error Occured... Status ${data.status}</strong><br>` +
                        `${data.error}</div>`;
                    displayModal("Failure!", errorBody, "window.location.reload()");
                }
            }
            else {
                let messageBody = "<div class='alert alert-success' role='alert'>" +
                    `<strong>Status ${data.status}</strong><br>` +
                    `${data.data}</div>`;
                displayModal("Success!", messageBody, 'RedirectOn("/Books/BooksListing")');
            }
        }

        function onBookFailure(xhr) {
            console.log("onBookFailure invoked");
            displayModal("Failure!", `Status: ${xhr.status}, Desc: ${xhr.statusText}`, "window.location.reload();");
        }
    </script>
}